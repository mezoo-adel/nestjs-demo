// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider     = "prisma-client"
  output       = "../generated/prisma"
  moduleFormat = "cjs"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model Post {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   title     String   @db.VarChar(255)
//   content   String?
//   published Boolean  @default(false)
//   author    User     @relation(fields: [authorId], references: [id])
//   authorId  Int
// }

// model Profile {
//   id     Int     @id @default(autoincrement())
//   bio    String?
//   user   User    @relation(fields: [userId], references: [id])
//   userId Int     @unique
// }

// model User {
//   id      Int      @id @default(autoincrement())
//   email   String   @unique
//   name    String?
//   posts   Post[]
//   profile Profile?
// }

model User {
  id            Int       @id @default(autoincrement())
  username      String    @unique
  email         String    @unique
  password      String?
  birth_date    DateTime?
  token_version Int       @default(0)
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt
  posts         Post[]
}

model Post {
  id            Int      @id @default(autoincrement())
  author_id     Int
  title         String
  content       String?
  is_published  Boolean  @default(false)
  view_count    Int      @default(0)
  comment_count Int      @default(0)
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
  author        User     @relation(fields: [author_id], references: [id], onDelete: Cascade)
}
